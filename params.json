{
  "name": "Bonjour-publish",
  "tagline": "Publish a service on bonjour",
  "body": "# bonjour-publish\r\nPublish a service on bonjour\r\n\r\n# Install\r\n\r\n```\r\ngit clone https://github.com/mh-cbon/bonjour-publish.git\r\ncd bonjour-publish\r\nnpm link . --local\r\nbonjour-publish -H 127.0.0.1 -P 8088 -T rc \"Title of the server\"\r\n...\r\nctrl+c to quit\r\n```\r\n\r\n# Command line\r\n\r\n    bonjour-publish 1.0.0\r\n    Publish a service on bonjour\r\n\r\n    Usage\r\n\r\n      bonjour-publish --host=127.0.0.1 --port=8088 --type=some  \"Title of the server\"\r\n\r\n    Options\r\n\r\n      Announcement (bonjour)\r\n      --port | -P       Port which your server listens (8090)\r\n      --type | -T       Type of interface provided by your server (http|smtp..)\r\n      --host | -H       Host which your server listens (127.0.0.1)\r\n      --txt             A JSON object to send as a TXT record.\r\n      --v4 [interface]  If Host option is not provided, announce ipv4 address as host,\r\n                        instead of your local bonjour hostname.\r\n                        If interface (eth0, lo..) is provided,\r\n                        only this interface will be announced.\r\n      --v6 [interface]  If Host option is not provided, announce ipv6 address as host,\r\n                        instead of your local bonjour hostname.\r\n                        If interface (eth0, lo..) is provided,\r\n                        only this interface will be announced.\r\n\r\n      Socket setup (mdns)\r\n      --multicast | -M  Use UDP multicasting\r\n      --interface | -I  Explicitly specify a network interface. Defaults to all. (192.168.0.2)\r\n      --udpport         Set the UDP port (5353)\r\n      --udpip           Set the UDP IP (224.0.0.251)\r\n      --ttl | -T        Set the multicast TTL (255)\r\n      --loopback | -L   Receive your own packets\r\n      --reuseAddr | -R  Set the reuseAddr on the socket (node >=0.11.13)\r\n      --verbose | -v    Set verbosity. Defaults to * Pass in modules name to debug.\r\n\r\n    Examples\r\n      bonjour-publish -H 127.0.0.1 -P 8088 -T http \"hello!\"\r\n      bonjour-publish -H 127.0.0.1 -P 8088 -T http \"I love you,\"\r\n      bonjour-publish -L -H 127.0.0.1 -P 8088 -T http \"Could you give me your name ?\"\r\n      bonjour-publish -L -R -P 8088 -T http \"doors\"\r\n      bonjour-publish -L -R -M -I 192.168.0.2 -P 8088 -T http \"doors\"\r\n      bonjour-publish --txt '{\"password\":123}' -P 8088 -T http \"doors\"\r\n\r\n    Read more\r\n      Service type must be one described at\r\n      http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml\r\n\r\n# read more\r\n\r\n- https://github.com/watson/bonjour\r\n- https://github.com/mafintosh/multicast-dns\r\n- https://github.com/watson/bonjour-browser\r\n- http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}